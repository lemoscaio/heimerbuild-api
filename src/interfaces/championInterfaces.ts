// Generated by https://quicktype.io

export type OriginalChampions = {
  [key: string]: OriginalChampion
}

export type OriginalChampion = {
  id: number
  key: string
  name: string
  title: string
  fullName: string
  icon: string
  resource: string
  attackType: string
  adaptiveType: string
  stats: Record<TypeOfStats, Stat>
  roles: ChampionRoles[]
  attributeRatings: AttributeRatings
  abilities: Abilities
  releaseDate: string
  releasePatch: string
  patchLastChanged: string
  price: Price
  lore: string
  faction: string
  skins: Skin[]
}

type TypeOfStats =
  | "health"
  | "healthRegen"
  | "mana"
  | "manaRegen"
  | "armor"
  | "magicResistance"
  | "attackDamage"
  | "movespeed"
  | "acquisitionRadius"
  | "selectionRadius"
  | "pathingRadius"
  | "gameplayRadius"
  | "criticalStrikeDamage"
  | "criticalStrikeDamageModifier"
  | "attackSpeed"
  | "attackSpeedRatio"
  | "attackCastTime"
  | "attackTotalTime"
  | "attackDelayOffset"
  | "attackRange"
  | "aramDamageTaken"
  | "aramDamageDealt"
  | "aramHealing"
  | "aramShielding"
  | "urfDamageTaken"
  | "urfDamageDealt"
  | "urfHealing"
  | "urfShielding"

type Stat = {
  flat: number
  percent: number
  perLevel: number
  percentPerLevel: number
}

type ChampionRoles =
  | "FIGHTER"
  | "JUGGERNAUT"
  | "TANK"
  | "ASSASSIN"
  | "BURST"
  | "MAGE"
  | "MARKSMAN"
  | "SUPPORT"
  | "VANGUARD"
  | "BATTLEMAGE"
  | "SPECIALIST"
  | "CATCHER"
  | "SKIRMISHER"
  | "WARDEN"
  | "DIVER"
  | "ENCHANTER"
  | "ARTILLERY"

type AttributeRatings = {
  damage: number
  toughness: number
  control: number
  mobility: number
  utility: number
  abilityReliance: number
  attack: number
  defense: number
  magic: number
  difficulty: number
}

type Abilities = {
  P: Ability[]
  Q: Ability[]
  W: Ability[]
  E: Ability[]
  R: Ability[]
}

type Ability = {
  name: string
  icon: string
  effects: Effect[]
  cost: Cost
  cooldown: Cooldown
  targeting: Targeting
  affects: Affects | null
  spellshieldable: SpellShieldable | null
  resource: Resource | null
  damageType: DamageType | null
  spellEffects: SpellEffects
  projectile: Projectile | null // boolean is string here
  onHitEffects: OnHitEffects | null // boolean is string here
  occurrence: Occurrence | null // boolean is string here
  notes: string
  blurb: string
  missileSpeed: null
  rechargeRate: number[]
  collisionRadius: null | string // number as string here (some with "50 / 60", so not a direct conversion)
  tetherRadius: null | string // number as string here (some with "800 − 650 (based on time active)", so not a direct conversion)
  onTargetCdStatic: null | string // number as string here (some with "6 / 5 / 4 / 3 (based on level)", so not a direct conversion)
  innerRadius: null | string // number as string here
  speed: null | string // number as string here (some with "100 / 400 / 700 / 750 (based on seconds active)", so not a direct conversion)
  width: null | string // number as string here (some with "220 (plus offset)", so not a direct conversion)
  angle: null | string // number as string here (some with "27.75°/ 37° / 46.25° / 4.625°", so not a direct conversion)
  castTime: null | string // number as string here (some with "0.6 − 0.4 (based on bonus attack speed)'", so not a direct conversion). There are also some boolean or only string.
  effectRadius: null | string // number as string here (some with "400 / 1000 / 1000" or just string such as "Kindred's  attack range", so not a direct conversion)
  targetRange: null | string // number as string here (some with "500 − 750 (based on Marks)" or just string such as "Miss Fortune's  attack range", so not a direct conversion)
}

type Effect = {
  description: string
  leveling: Leveling[]
}

type Leveling = {
  attribute: string
  modifiers: Modifier[]
}

type Cost = {
  modifiers: Modifier[]
}

type Modifier = {
  values: number[]
  units: string[]
}

type Cooldown = {
  modifiers: Modifier[]
  affectedByCdr: boolean
}

type Targeting =
  | "Passive"
  | "Direction"
  | "Location"
  | "Auto"
  | "Direction / Auto"
  | "Unit / Direction"
  | "Direction / Auto / Location"
  | "Unit"
  | "Location / Auto"
  | "Unit / Location"
  | "N/A"
  | "Location / Unit"
  | "Vector"
  | "Auto / Direction"
  | "Unit / Auto"
  | "Varied"
  | "Auto / Unit"
  | "Direction / Location"
  | "Auto / Location"

type Affects =
  | "Self, Enemies"
  | "Enemies"
  | "Self"
  | "Enemies | Self"
  | "Self | Allies"
  | "Enemies / Tibbers"
  | "Self / Enemies"
  | "Turret ruins"
  | "Allies"
  | "Self | Allies | Enemies"
  | "Enemy | Structure"
  | "Terrain | Self"
  | "Enemies / Self"
  | "Enemies | Structures"
  | "Allies | Enemies"
  | "Monsters"
  | "Allies | Self | Enemies"
  | "None"
  | "Allies | Allied turrets | Self"
  | "Enemies | Allies"
  | "Oathsworn Ally / Enemies"
  | "Allies | Self"
  | "Enemies / Self | Allies"
  | "Enemies / Allies / Self"
  | "Allies / Self | Enemies"
  | "Enemies / Elemental"
  | "Enemies | Terrain"
  | "Enemies / Allies"
  | "Self | Ememies"
  | "Allies | Ememies"
  | "Enemies | Allies | Self"
  | "Allies | Enemies | Turrets | Wards"
  | "Allies / Enemies"
  | "Allies / Self"
  | "Self | Enemies / Allies"
  | "Ememies"
  | "Self | Rakan"
  | "Self / Allies"
  | "Varied"

type SpellShieldable =
  | "False"
  | "True"
  | "Special"
  | "false"
  | "special"
  | "true"
  | "unknown"

type Resource =
  | "MANA"
  | "ENERGY"
  | "MANA_PER_SECOND"
  | "OTHER"
  | "CHARGE"
  | "HEALTH"
  | "CURRENT_HEALTH"
  | "GRIT"
  | "FURY"
  | "MAXIMUM_HEALTH"

type DamageType =
  | "PHYSICAL_DAMAGE"
  | "MIXED_DAMAGE"
  | "MAGIC_DAMAGE"
  | "TRUE_DAMAGE"
  | "OTHER_DAMAGE"

type SpellEffects =
  | "proc"
  | "spellaoe"
  | "spell"
  | "Area of effect"
  | "Single target"
  | "aoe"
  | "special"
  | "basic"
  | "Heal"
  | "Special"
  | "default"
  | "aoedot"
  | "False"
  | "Attack"
  | "mixed"
  | "Shield"
  | "Proc"
  | "Basic"
  | "Spell"
  | "single"
  | "AoE"
  | "Area of Effect"
  | "area"
  | "AoeDoT"
  | "area of effect"
  | "Aoe"
  | "Single"
  | "dot"
  | "attack"
  | "DoT"
  | "AoEDoT"
  | "periodic"
  | "Spellaoe"
  | "false"
  | "pet"

type Projectile = "TRUE" | "SPECIAL" | "FALSE"

type OnHitEffects = "Special" | "True" | "true"

type Occurrence = "On-hit" | "on-hit" | "True"

type Price = {
  blueEssence: number
  rp: number
  saleRp: number
}

type Skin = {
  name: string
  id: number
  isBase: boolean
  availability: string
  formatName: string
  lootEligible: boolean
  cost: number | string
  sale: number
  distribution: null | string
  rarity: string
  chromas: Chroma[]
  lore: string
  release: string
  set: string[]
  splashPath: string
  uncenteredSplashPath: string
  tilePath: string
  loadScreenPath: string
  loadScreenVintagePath: null | string
  newEffects: boolean
  newAnimations: boolean
  newRecall: boolean
  newVoice: boolean
  newQuotes: boolean
  voiceActor: string[]
  splashArtist: string[]
}

type Chroma = {
  name: string
  id: number
  chromaPath: string
  colors: string[]
  descriptions: Description[]
  rarities: RarityElement[]
}

type Description = {
  description: null | string
  region: null | string
}

type RarityElement = {
  rarity: number | null
  region: null | string
}
